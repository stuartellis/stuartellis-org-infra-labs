
.action_analyze_terraform:
  image: $CI_TF_IMAGE
  before_script:
    - apk add --no-cache curl git jq make unzip
  script:
    - make terraform-install
    - make terraform-check-fmt

.action_plan_terraform:
  image: $CI_TF_IMAGE
  before_script:
    - apk add --no-cache curl git jq make unzip
  allow_failure:
    exit_codes: 2 # Exit code when change detected by Terraform plan
  script:
    - make terraform-install
    - make terraform-init
    - make terraform-validate
    - make terraform-plan

.action_deploy_tf_review:
  image: $CI_TF_IMAGE
  before_script:
    - apk add --no-cache curl git make unzip
  script:
    - cat $CI_PROJECT_DIR/tmp/terraform/result-code.txt
    - make terraform-install
    - make terraform-init
    - make terraform-apply
#   environment:
#     name: dev/$STACK_VARIANT
#     deployment_tier: development
#     on_stop: .action_stop_tf_review
#     # url: https://$CI_ENVIRONMENT_SLUG.action_example.action_com

# .action_stop_tf_review:
#   image: $CI_TF_IMAGE
#   before_script:
#     - apk add --no-cache curl git make unzip
#   script:
#     - make terraform-install
#     - make terraform-init
#     - make terraform-destroy
#   environment:
#     name: dev/$STACK_VARIANT
#     action: stop
#   when: manual
