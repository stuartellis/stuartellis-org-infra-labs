
.action_analyze_terraform:
  image: $CI_TF_IMAGE
  before_script:
    - apk add --no-cache curl git jq make unzip
  script:
    - make terraform-install
    - make terraform-check-fmt

.action_plan_terraform:
  image: $CI_TF_IMAGE
  before_script:
    - apk add --no-cache curl git jq make unzip
  allow_failure:
    exit_codes: 2 # Exit code when change detected by Terraform plan
  script:
    - make terraform-install
    - make terraform-init
    - make terraform-validate
    - make terraform-plan

.action_deploy_tf_review:
  image: $CI_TF_IMAGE
  before_script:
    - apk add --no-cache curl git make unzip
  script:
    - make terraform-install
    - make terraform-init
    - make terraform-apply

.action_stop_tf_review:
  image: $CI_TF_IMAGE
  before_script:
    - apk add --no-cache curl git make unzip
  script:
    - make terraform-install
    - make terraform-init
    - make terraform-destroy

.action_deploy_tf_release:
  image: $CI_TF_IMAGE
  before_script:
    - apk add --no-cache curl git make unzip
  script:
    - make terraform-install
    - make terraform-init
    - make terraform-apply

.action_tag_release:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Tag release"
  release:
    tag_name: $ENVIRONMENT-$COMPONENT_NAME-$STACK_VARIANT-$PROJECT_VERSION
    description: 'Release $ENVIRONMENT $COMPONENT_NAME $STACK_VARIANT $PROJECT_VERSION'
